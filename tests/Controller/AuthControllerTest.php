<?php

namespace App\Tests\Controller;

use App\Entity\User;
use Doctrine\ORM\EntityManager;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use Symfony\Component\HttpFoundation\Request;

/**
 * Class AuthControllerTest
 * @package App\Tests\Controller
 */
class AuthControllerTest extends WebTestCase
{
    const USER_EMAIL = 'func_test@func_test.ru';
    const USER_PASSWORD = 'Aa123456';
    const USER_USERNAME = 'func_test';

    const URL_REGISTER = '/auth/register';
    const URL_LOGIN    = '/auth/login';
    const URL_LOGOUT   = '/auth/logout';

    private $token = '';

    /**
     * @var EntityManager
     */
    private $entityManager;

    public function testRegister(): void
    {
        $client = static::createClient();
        $client->xmlHttpRequest(Request::METHOD_POST, self::URL_REGISTER, [
            'email' => self::USER_EMAIL,
            'password' => self::USER_PASSWORD,
            'username' => self::USER_USERNAME
        ]);

        $this->assertEquals(202, $client->getResponse()->getStatusCode());
        $responseArray = json_decode($client->getResponse()->getContent(), true);
        $this->assertArrayHasKey('success', $responseArray);
    }

    /**
     * @depends testRegister
     */
    public function testLogin(): void
    {
        $client = static::createClient();
        $client->xmlHttpRequest(Request::METHOD_POST, self::URL_REGISTER, [
            'email' => self::USER_EMAIL,
            'password' => self::USER_PASSWORD,
        ]);

        $this->assertEquals(202, $client->getResponse()->getStatusCode());
        $responseArray = json_decode($client->getResponse()->getContent(), true);
        $this->token = $responseArray['data']['apiToken']['key'];
        $this->assertArrayHasKey('success', $responseArray);
        $this->assertArrayHasKey('data', $responseArray);
        $this->assertArrayHasKey('token', $responseArray['data']['apiToken']);

    }

    /**
     * @depends testLogin
     */
    public function testLogout()
    {
        $client = static::createClient();
        $client->xmlHttpRequest(Request::METHOD_POST, self::URL_REGISTER, [
            'token' => $this->token,
        ]);
        $this->assertEquals(202, $client->getResponse()->getStatusCode());
    }

    /**
     * just setup the test
     */
    protected function setUp(): void
    {
        $kernel = self::bootKernel();
        $this->entityManager = $kernel->getContainer()->get('doctrine')->getManager();

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws \Doctrine\ORM\ORMException
     * @throws \Doctrine\ORM\OptimisticLockException
     */
    protected function tearDown(): void
    {
        $user = $this->entityManager->getRepository(User::class)->findOneBy(['email' => self::USER_EMAIL]);
        $this->entityManager->remove($user);
        $this->entityManager->flush();
    }
}