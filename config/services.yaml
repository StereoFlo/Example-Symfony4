# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
# @see parameters.yml.dist

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true       # Automatically injects dependencies in your services.
        autoconfigure: false # Automatically registers your services as commands, event subscribers, etc.
        public: false        # Allows optimizing the container by removing unused services; this also means
                             # fetching services directly from the container via $container->get() won't work.
                             # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Application,Commands,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.exceprion.listener:
      class: App\Listener\ExceptionListener
      arguments:
        - '@translator'
      tags:
          - { name: kernel.event_listener, event: kernel.exception }

    app.request_listener:
      class: App\Listener\HttpRequestListener
      tags:
        - { name: kernel.event_listener, event: kernel.request }

    app.api_authenticator:
      class: App\Security\Authentication\ApiTokenAuthenticator
      arguments: ['@user.repo']

    app.api_user_provider:
      class: App\Security\Authentication\ApiUserProvider
      arguments: ['@user.repo']

    App\Security\Authentication\CurrentUserFactory:
      arguments: ['@security.token_storage']

    App\Entity\User:
      factory: 'App\Security\Authentication\CurrentUserFactory:getUser'

imports:
  - { resource: 'parameters.yml' }
  - { resource: 'handlers.yml' }
  - { resource: 'repos.yml' }
  - { resource: 'controllers.yml' }